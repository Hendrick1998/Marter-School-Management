{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\SilverKing\\\\Documents\\\\MSM\\\\msm\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\SilverKing\\\\Documents\\\\MSM\\\\msm\\\\src\\\\components\\\\Linegraph.jsx\";\nimport React from \"react\";\nimport { XYPlot, XAxis, YAxis, VerticalBarSeries, LabelSeries } from 'react-vis';\n\nclass MyLinegraph extends React.Component {\n  render() {\n    const data = this.props.data;\n    const chartDomain = [0, 400];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      xType: \"ordinal\",\n      width: chartWidth,\n      height: chartHeight,\n      yDomain: chartDomain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(LabelSeries, {\n      data: data.map(obj => {\n        return _objectSpread({}, obj, {\n          label: obj.y.toString()\n        });\n      }),\n      labelAnchorX: \"middle\",\n      labelAnchorY: \"text-after-edge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyLinegraph;","map":{"version":3,"sources":["C:\\Users\\SilverKing\\Documents\\MSM\\msm\\src\\components\\Linegraph.jsx"],"names":["React","XYPlot","XAxis","YAxis","VerticalBarSeries","LabelSeries","MyLinegraph","Component","render","data","props","chartDomain","chartWidth","chartHeight","map","obj","label","y","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,iBAA9B,EAAiDC,WAAjD,QAAmE,WAAnE;;AACA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAC1CC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAME,WAAW,GAAG,CAAC,CAAD,EAAG,GAAH,CAApB;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AACH,MAAA,KAAK,EAAC,SADH;AAEH,MAAA,KAAK,EAAEC,UAFJ;AAGH,MAAA,MAAM,EAAEC,WAHL;AAIH,MAAA,OAAO,EAAEF,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALG,EAMH,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANG,EAOH,oBAAC,iBAAD;AACI,MAAA,IAAI,EAAEF,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPG,EAUH,oBAAC,WAAD;AACI,MAAA,IAAI,EAAEA,IAAI,CAACK,GAAL,CAASC,GAAG,IAAI;AAClB,iCAAYA,GAAZ;AAAiBC,UAAAA,KAAK,EAAED,GAAG,CAACE,CAAJ,CAAMC,QAAN;AAAxB;AACH,OAFK,CADV;AAII,MAAA,YAAY,EAAC,QAJjB;AAKI,MAAA,YAAY,EAAC,iBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVG,CADH,CADF;AAsBD;;AA1BuC;;AA6B1C,eAAeZ,WAAf","sourcesContent":["import React from \"react\";\r\nimport {XYPlot, XAxis, YAxis, VerticalBarSeries, LabelSeries} from 'react-vis';\r\nclass MyLinegraph extends React.Component {\r\nrender() {\r\n  const data = this.props.data;\r\n  const chartDomain = [0,400];\r\n    return (\r\n      <div>\r\n         <XYPlot \r\n      xType=\"ordinal\" \r\n      width={chartWidth} \r\n      height={chartHeight} \r\n      yDomain={chartDomain}>\r\n      <XAxis />\r\n      <YAxis />\r\n      <VerticalBarSeries\r\n          data={data}\r\n      />\r\n      <LabelSeries\r\n          data={data.map(obj => {\r\n              return { ...obj, label: obj.y.toString() }\r\n          })}\r\n          labelAnchorX=\"middle\"\r\n          labelAnchorY=\"text-after-edge\"\r\n      />\r\n  </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyLinegraph;"]},"metadata":{},"sourceType":"module"}